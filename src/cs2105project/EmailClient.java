/*
 * EmailClient.java
 *
 * Created on Oct 25, 2011, 5:03:34 PM
 *
 * @author 
 * CS2105 Group 81 
 * a0073937	TEO EE SIANG, LIONEL
 * u097016H	XU CHUNFENG
 * 
 */
package cs2105project;

import java.util.*;

public class EmailClient extends javax.swing.JFrame {

    TCPClient newClient = new TCPClient();
    ArrayList<String> sentMailList = new ArrayList();
    ArrayList<ArrayList<String>> inBoxMailList = new ArrayList();
    int numOfMails = 0;

    /** Creates new form EmailClient */
    public EmailClient() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPassword = new javax.swing.JPasswordField();
        jUserID = new javax.swing.JTextField();
        jConnect = new javax.swing.JButton();
        jDisconnect = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSMTP = new javax.swing.JTextField();
        jPOP3 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jFrom = new javax.swing.JTextField();
        jTo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jText = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSubject = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCc = new javax.swing.JTextField();
        jSend = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jinBoxList = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        jInboxConsole = new javax.swing.JTextArea();
        jDisplayInboxMail = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jCheckInboxMail = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jSentMailContent = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        jMailList = new javax.swing.JList();
        jDisplayMail = new javax.swing.JButton();
        jDeleteMail = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jConsole = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CS2105 Email Client");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Username:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Password:");

        jPassword.setFont(new java.awt.Font("Tahoma", 1, 12));
        jPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEnterKeyPressed(evt);
            }
        });

        jUserID.setFont(new java.awt.Font("Tahoma", 1, 12));
        jUserID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEnterKeyPressed(evt);
            }
        });

        jConnect.setFont(new java.awt.Font("Tahoma", 1, 12));
        jConnect.setText("Connect");
        jConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConnectActionPerformed(evt);
                
            }
        });

        jDisconnect.setFont(new java.awt.Font("Tahoma", 1, 12));
        jDisconnect.setText("Disconnect");
        jDisconnect.setEnabled(false);
        jDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisconnectActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("Connection Details:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel12.setText("SMTP Server:");

        jSMTP.setFont(new java.awt.Font("Tahoma", 1, 12));
        jSMTP.setText("smtp.nus.edu.sg");
        jSMTP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEnterKeyPressed(evt);
            }
        });

        jPOP3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jPOP3.setText("pop.nus.edu.sg");
        jPOP3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEnterKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel13.setText("POP3 Server:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jUserID, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                            .addComponent(jPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                            .addComponent(jSMTP, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jConnect)
                                .addGap(18, 18, 18)
                                .addComponent(jDisconnect))
                            .addComponent(jPOP3, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSMTP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPOP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jConnect)
                    .addComponent(jDisconnect))
                .addContainerGap(327, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Connection Details", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("To:");

        jLabel4.setText("From:");

        jFrom.setEnabled(false);

        jTo.setEnabled(false);

        jText.setColumns(20);
        jText.setFont(new java.awt.Font("Arial", 0, 13));
        jText.setRows(5);
        jText.setEnabled(false);
        jScrollPane1.setViewportView(jText);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText("Compose Mail");

        jLabel7.setText("Subject:");

        jSubject.setEnabled(false);

        jLabel8.setText("Cc:");

        jCc.setEnabled(false);

        jSend.setText("Send Email");
        jSend.setEnabled(false);
        jSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCc, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                            .addComponent(jSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                            .addComponent(jTo, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                            .addComponent(jFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)))
                    .addComponent(jLabel6)
                    .addComponent(jSend, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSend)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Compose Mail", jPanel2);

        jPanel5.setAutoscrolls(true);

        jScrollPane3.setViewportView(jinBoxList);

        jInboxConsole.setColumns(20);
        jInboxConsole.setRows(5);
        jInboxConsole.setAutoscrolls(false);
        jInboxConsole.setRequestFocusEnabled(false);
        jScrollPane6.setViewportView(jInboxConsole);

        jDisplayInboxMail.setFont(new java.awt.Font("Tahoma", 1, 12));
        jDisplayInboxMail.setText("Retrieve");
        jDisplayInboxMail.setEnabled(false);
        jDisplayInboxMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayInboxMailActionPerformed(evt);
            }
        });

        jCheckInboxMail.setFont(new java.awt.Font("Tahoma", 1, 12));
        jCheckInboxMail.setText("List");
        jCheckInboxMail.setEnabled(false);
        jCheckInboxMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckInboxMailActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Inbox:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(624, 624, 624))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckInboxMail, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDisplayInboxMail, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jCheckInboxMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDisplayInboxMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("My Inbox", jPanel5);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Sent Emails:");

        jSentMailContent.setColumns(20);
        jSentMailContent.setRows(5);
        jScrollPane4.setViewportView(jSentMailContent);

        jMailList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jMailList.setToolTipText("");
        jScrollPane5.setViewportView(jMailList);

        jDisplayMail.setFont(new java.awt.Font("Tahoma", 1, 12));
        jDisplayMail.setText("Display Mail");
        jDisplayMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayMailActionPerformed(evt);
            }
        });

        jDeleteMail.setFont(new java.awt.Font("Tahoma", 1, 12));
        jDeleteMail.setText("Delete Sent Mail");
        jDeleteMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteMailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDisplayMail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDeleteMail, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDeleteMail)
                    .addComponent(jDisplayMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sent Mails", jPanel4);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Console Output:");

        jConsole.setColumns(20);
        jConsole.setEditable(false);
        jConsole.setRows(5);
        jScrollPane2.setViewportView(jConsole);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Console Output", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConnectActionPerformed
// establish connection:
    jDisconnect.setEnabled(false);
    jConnect.setEnabled(false);

    // establish connection and receive response
    String response = newClient.connect(jUserID.getText(), jPassword.getText(), jSMTP.getText());
    String[] result = response.split(";");

    // if connected
    if (result[0].compareTo("connected") == 0) {
        //set buttons to enable or disable
        jUserID.setEnabled(false);
        jPassword.setEnabled(false);
        jConnect.setEnabled(false);
        jSMTP.setEnabled(false);
        jDisconnect.setEnabled(true);
        jFrom.setEnabled(true);
        jTo.setEnabled(true);
        jCc.setEnabled(true);
        jSubject.setEnabled(true);
        jText.setEnabled(true);
        jSend.setEnabled(true);
        jPOP3.setEnabled(false);
        jCheckInboxMail.setEnabled(true);
        jDisplayInboxMail.setEnabled(true);
        // load users saved sent mails
        loadSentMail();
    } else {
        // set buttons to enable or disable
        jUserID.setEnabled(true);
        jPassword.setEnabled(true);
        jSMTP.setEnabled(true);
        jPOP3.setEnabled(true);
        jDisconnect.setEnabled(false);
        jConnect.setEnabled(true);
        jCheckInboxMail.setEnabled(false);
        jDisplayInboxMail.setEnabled(false);
    }
    // print the output to console
    for (int x = 1; x < result.length; x++) {
        jConsole.setText(jConsole.getText() + "\n" + result[x]);
    }

    // Connect to pop3

    response = newClient.connectToPop3(jUserID.getText(), jPassword.getText(), jPOP3.getText());
    result = response.split(";");
    if (result[0].compareTo("connected") == 0) {
        //print connection details
        for (int x = 1; x < result.length; x++) {
            jConsole.setText(jConsole.getText() + "\n" + result[x]);
        }

        //Check InBox status
        response = newClient.checkInboxStatus();
        result = response.split(";");
        for (int x = 1; x < result.length; x++) {
            jInboxConsole.setText(jInboxConsole.getText() + "\n" + result[x]);
        }

        String[] stat = result[1].split(" ");
        numOfMails = Integer.parseInt(stat[1]);
        //System.out.println("CHECK INBOX :" + numOfMails);

    } else {
        jConsole.setText(response);
    }

}//GEN-LAST:event_jConnectActionPerformed

private void jDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisconnectActionPerformed
    // disconnect:
    String response = newClient.disconnect();
    String[] result = response.split(";");

    String response1 = newClient.quitPop3();
    String[] result1 = response1.split(";");
    // if disconnect is successful
    if (result[0].compareTo("closed") == 0) {
        // set buttons to enable or disable
        jUserID.setEnabled(true);
        jPassword.setEnabled(true);
        jConnect.setEnabled(true);
        jDisconnect.setEnabled(false);
        jPOP3.setEnabled(true);
        jSMTP.setEnabled(true);
        jCheckInboxMail.setEnabled(false);
        jDisplayInboxMail.setEnabled(false);
        // clear the sent mail display content
        Vector sentHeader = new Vector();
        jMailList.setListData(sentHeader);
        jinBoxList.setListData(sentHeader);
        jSentMailContent.setText("");
        jInboxConsole.setText("");

        // set buttons to enable or disable 
        jFrom.setEnabled(false);
        jTo.setEnabled(false);
        jCc.setEnabled(false);
        jSubject.setEnabled(false);
        jText.setEnabled(false);
        jSend.setEnabled(false);
    } else {
        // set buttons to enable or disable
        jDisconnect.setEnabled(false);
        jConnect.setEnabled(true);
        jCheckInboxMail.setEnabled(false);
        jDisplayInboxMail.setEnabled(false);
    }
    // print results to console
    for (int x = 1; x < result.length; x++) {
        jConsole.setText(jConsole.getText() + "\n" + result[x]);
    }

    for (int x = 1; x < result1.length; x++) {
        jConsole.setText(jConsole.getText() + "\n" + result1[x]);
    }
}//GEN-LAST:event_jDisconnectActionPerformed

private void jEnterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEnterKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
        // establish connection:
        jDisconnect.setEnabled(false);
        jConnect.setEnabled(false);

        // establish connection and receive response
        String response = newClient.connect(jUserID.getText(), jPassword.getText(), jSMTP.getText());
        String[] result = response.split(";");

        // if connected
        if (result[0].compareTo("connected") == 0) {
            //set buttons to enable or disable
            jUserID.setEnabled(false);
            jPassword.setEnabled(false);
            jConnect.setEnabled(false);
            jSMTP.setEnabled(false);
            jDisconnect.setEnabled(true);
            jFrom.setEnabled(true);
            jTo.setEnabled(true);
            jCc.setEnabled(true);
            jSubject.setEnabled(true);
            jText.setEnabled(true);
            jSend.setEnabled(true);
            jPOP3.setEnabled(false);
            jCheckInboxMail.setEnabled(true);
            jDisplayInboxMail.setEnabled(true);
            // load users saved sent mails
            loadSentMail();
        } else {
            // set buttons to enable or disable
            jUserID.setEnabled(true);
            jPassword.setEnabled(true);
            jSMTP.setEnabled(true);
            jPOP3.setEnabled(true);
            jDisconnect.setEnabled(false);
            jConnect.setEnabled(true);
            jCheckInboxMail.setEnabled(false);
            jDisplayInboxMail.setEnabled(false);
        }
        // print the output to console
        for (int x = 1; x < result.length; x++) {
            jConsole.setText(jConsole.getText() + "\n" + result[x]);
        }

        // Connect to pop3

        response = newClient.connectToPop3(jUserID.getText(), jPassword.getText(), jPOP3.getText());
        result = response.split(";");
        if (result[0].compareTo("connected") == 0) {
            //print connection details
            for (int x = 1; x < result.length; x++) {
                jConsole.setText(jConsole.getText() + "\n" + result[x]);
            }

            //Check InBox status
            response = newClient.checkInboxStatus();
            result = response.split(";");
            for (int x = 1; x < result.length; x++) {
                jInboxConsole.setText(jInboxConsole.getText() + "\n" + result[x]);
            }

            String[] stat = result[1].split(" ");
            numOfMails = Integer.parseInt(stat[1]);
            //System.out.println("CHECK INBOX :" + numOfMails);

        } else {
            jConsole.setText(response);
        }

    }
}//GEN-LAST:event_jEnterKeyPressed

private void jDisplayMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayMailActionPerformed
// Display individual mail from sent  

    // display selected mail
    if (jMailList.getSelectedIndex() != -1) {
        // retrieve information from selected mail
        String content = sentMailList.get(jMailList.getSelectedIndex());

        // set the content pane to have the text
        jSentMailContent.setText(content);
    }
}//GEN-LAST:event_jDisplayMailActionPerformed

private void jDeleteMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteMailActionPerformed
// Delete selected mail:

    // display selected mail
    if (jMailList.getSelectedIndex() != -1) {
        // remove selected mail from arraylist
        sentMailList.remove(jMailList.getSelectedIndex());
        // set content pane to be empty
        jSentMailContent.setText("");
        // update the content to be displayed
        updateSendList();
        // save mail
        newClient.saveMail(jUserID.getText(), sentMailList);
    }
}//GEN-LAST:event_jDeleteMailActionPerformed

private void jSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendActionPerformed
// Send mail with response: 
    String[] response = new String[2];
    response = newClient.sendMail(jFrom.getText(), jTo.getText(), jCc.getText(), jText.getText(), jSubject.getText());
    String[] result = response[0].split(";");

    // if msg is sent
    if (result[0].compareTo("sent") == 0) {
        // add sent mail to arraylist
        sentMailList.add(response[1]);
        // reset text fields
        jFrom.setText("");
        jTo.setText("");
        jCc.setText("");
        jSubject.setText("");
        jText.setText("");
        jSend.setText("Send Email");
        // update sent list
        updateSendList();
        newClient.saveMail(jUserID.getText(), sentMailList);
    } else {
        // change from "email mail" to retry
        jSend.setText("Retry");
    }
    // update the console
    for (int x = 1; x < result.length; x++) {
        jConsole.setText(jConsole.getText() + "\n" + result[x]);
    }
}//GEN-LAST:event_jSendActionPerformed

private void jCheckInboxMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckInboxMailActionPerformed
// TODO add your handling code here:

    // retrieve all e-mails
    inBoxMailList = newClient.retrInbox(numOfMails);
    System.out.println("CHECK INBOX DONE");

    // update inbox list
    updateInboxList();

}//GEN-LAST:event_jCheckInboxMailActionPerformed

    private void updateSendList() {
        Vector sentHeader = new Vector();

        //if the sendmail is not 0
        if (sentMailList.size() != 0) {
            for (int i = 0; i < sentMailList.size(); i++) {
                String[] result = sentMailList.get(i).split("\n");
                String listheaders = "(" + result[1] + ")" + "    " + result[3];
                // add the headers of a mail to the vector
                sentHeader.add(listheaders);
                /* array 0 - from address
                 * array 1 - to address
                 * array 2 - cc address
                 * array 3 - subject
                 * array 4 - reply to
                 * array 5 - message
                 * array 6 - .
                 */
                // set the vector as the model for the mailList
                jMailList.setListData(sentHeader);
            }
        } else {
            jMailList.setListData(sentHeader);
        }
    }

private void jDisplayInboxMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayInboxMailActionPerformed
// TODO add your handling code here:

    // display selected index
    if (jinBoxList.getSelectedIndex() != -1) {
        int index = jinBoxList.getSelectedIndex();
        String content = "";
        // retrieve the content
        for (int i = 0; i < inBoxMailList.get(index).size(); i++) {
            content += inBoxMailList.get(index).get(i) + "\n";
        }
        // set the content to console
        jInboxConsole.setText(content);
    }
}//GEN-LAST:event_jDisplayInboxMailActionPerformed

    private void loadSentMail() {
        // load saved sent mail

        // get mail with userID
        ArrayList<String> response = newClient.getMail(jUserID.getText());
        if (response != null) {
            // set the arraylist the same as response
            sentMailList = response;
            updateSendList();
        } else {
            jConsole.setText(jConsole.getText() + "No previous file is found.");
        }

    }

//Update the inbox mail list
    private void updateInboxList() {
        Vector sentHeader = new Vector();

        if (inBoxMailList.size() != 0) {
            for (int i = 0; i < inBoxMailList.size(); i++) {

                //Default if not found
                String from = "Not Found";
                String subject = "Not Found";
                for (int j = 0; j < inBoxMailList.get(i).size(); j++) {
                    if (inBoxMailList.get(i).get(j).indexOf("From:") != -1) {
                        from = inBoxMailList.get(i).get(j);
                    } else if (inBoxMailList.get(i).get(j).indexOf("Subject:") != -1) {
                        subject = inBoxMailList.get(i).get(j);
                    }
                }

                String listheaders = (i + 1) + ". " + from + "          " + subject;
                sentHeader.add(listheaders);
                jinBoxList.setListData(sentHeader);
            }
        } else {
            jinBoxList.setListData(sentHeader);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmailClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmailClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmailClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmailClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EmailClient().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jCc;
    private javax.swing.JButton jCheckInboxMail;
    private javax.swing.JButton jConnect;
    private javax.swing.JTextArea jConsole;
    private javax.swing.JButton jDeleteMail;
    private javax.swing.JButton jDisconnect;
    private javax.swing.JButton jDisplayInboxMail;
    private javax.swing.JButton jDisplayMail;
    private javax.swing.JTextField jFrom;
    private javax.swing.JTextArea jInboxConsole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jMailList;
    private javax.swing.JTextField jPOP3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jSMTP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jSend;
    private javax.swing.JTextArea jSentMailContent;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jSubject;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jText;
    private javax.swing.JTextField jTo;
    private javax.swing.JTextField jUserID;
    private javax.swing.JList jinBoxList;
    // End of variables declaration//GEN-END:variables
}
